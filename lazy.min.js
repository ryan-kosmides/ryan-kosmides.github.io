const images=document.querySelectorAll(".lazy-image"),config={rootMargin:"50px 0px",threshold:.01};var observer,imageCount=images.length;if("IntersectionObserver"in window){observer=new IntersectionObserver(onIntersection,config);for(var i=0;i<images.length;i++){var image=images[i];image.classList.contains("lazy-image--handled")||observer.observe(image)}}else loadImagesImmediately(images);function fetchImage(e){return new Promise(function(n,a){const r=new Image;return r.src=e,r.onload=n,r.onerror=a,r})}function preloadImage(e){const n=e.dataset.src;if(n)return fetchImage(n).then(function(){applyImage(e,n)})}function loadImagesImmediately(e){for(var n=0;n<e.length;n++){preloadImage(e[n])}}function disconnect(){observer&&observer.disconnect()}function onIntersection(e){0===imageCount&&observer.disconnect();for(var n=0;n<e.length;n++){var a=e[n];a.intersectionRatio>0&&(imageCount--,observer.unobserve(a.target),preloadImage(a.target))}}function applyImage(e,n){e.classList.add("lazy-image--handled"),e.src=n,e.classList.add("fade-in")}
//# sourceMappingURL=Lazy.min.js.map
